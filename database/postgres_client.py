import os
import pandas as pd
from sqlalchemy import create_engine
from loguru import logger
from dotenv import load_dotenv

load_dotenv()

class PostgreSQLClient:
    """–ö–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PostgreSQL"""
    
    def __init__(self):
        try:
            pg_user = os.environ['POSTGRES_USER']
            pg_pass = os.environ['POSTGRES_PASSWORD']
            pg_host = os.environ['POSTGRES_HOST']
            pg_port = os.environ['POSTGRES_PORT']
            pg_db = os.environ['POSTGRES_DB_NAME']
            
            self.engine = create_engine(
                f"postgresql+psycopg2://{pg_user}:{pg_pass}@{pg_host}:{pg_port}/{pg_db}"
            )
            logger.info("PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        except KeyError as e:
            logger.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è PostgreSQL: {e}")
            raise
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
            raise

    def read_table(self, table_name: str) -> pd.DataFrame:
        """–ß—Ç–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ PostgreSQL"""
        try:
            logger.info(f"üìñ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã '{table_name}'...")
            df = pd.read_sql(f'SELECT * FROM {table_name}', con=self.engine)
            logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã '{table_name}'")
            return df
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ PostgreSQL: {e}")
            raise

    def save_table(self, df: pd.DataFrame, table_name: str, if_exists: str = 'replace'):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ DataFrame –≤ PostgreSQL"""
        try:
            logger.info(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ {len(df)} –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É '{table_name}'...")
            df.to_sql(table_name, con=self.engine, if_exists=if_exists, index=False)
            logger.info("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ PostgreSQL: {e}")
            raise